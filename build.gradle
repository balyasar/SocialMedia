// Projede kullanılmak istenen pluginsler seçilir.
plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'

}

// Alt projelerde kullanılmak istenilenler dahil edilir.
allprojects {
    apply plugin: 'java'
    apply plugin: 'application'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java-library'
    apply from: "${rootDir}/dependencies.gradle"
}

// Alt projelerin versiyonlanması ve java sürümlerinin ayarlanmasını yapıyoruz.
subprojects {
    group = 'com.yasar'
    version = 'v.0.1'
    java {
        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }
    tasks.withType(JavaCompile).tap {
        configureEach {
            options.encoding = "UTF-8"
        }
    }
}
// Alt projeler için bağımlılıkların enjeksiyonu yapılacak.
allprojects {
    // Bağımlılıkların nereden indirileceğini seçiyoruz.
    repositories {
        mavenCentral()
        google()
    }
    // Projeyi build alırken kullanacağınız yapıyı ekliyoruz.
    buildscript {
        repositories {
            mavenCentral()
        }
        dependencies {
            classpath("org.springframework.boot:spring-boot-gradle-plugin:${versions.springBoot}")
        }
    }
    // Tüm alt projelerde ortak olan bağımlılıkları buraya ekliyoruz.
    dependencies {
        implementation libs.springBootStarterWeb
        implementation libs.springBootValidation
        implementation libs.springCloudOpenFeign
        implementation libs.lombok
        annotationProcessor libs.lombok
        implementation libs.mapstruct
        annotationProcessor libs.mapstructProcessor
        implementation libs.swaggerUI
        implementation libs.jwt


    }
    // Projenin test işlemleri için kullanılacak yapıyı tanımlıyoruz.
    test {
        useJUnitPlatform()
    }
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}